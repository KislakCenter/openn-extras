#!/usr/bin/env ruby

require 'open-uri'
require 'csv'

##
# For a given repository number (0001, 0002, 0003, etc.), pull down the CSV of
# the repositories online document and rewrite it in brief format appending
# the page counts. Output CSV will have this format:
#
# id,path,base_dir,created,updated,icount
# 1,0001/ljs103,ljs103,2014-11-03T23:13:18+00:00,2015-04-22T15:17:04+00:00,4
# 1,0001/ljs201,ljs201,2014-11-03T23:38:42+00:00,2015-04-22T15:17:05+00:00,2
# 1,0001/ljs255,ljs255,2014-11-03T23:39:46+00:00,2015-04-22T15:17:06+00:00,2
# 1,0001/ljs489,ljs489,2014-11-03T23:40:23+00:00,2015-04-22T15:17:07+00:00,2
# 1,0001/ljsmisc1,ljsmisc1,2014-11-03T23:41:42+00:00,2015-04-22T15:17:07+00:00,2
# 1,0001/ljsmisc2,ljsmisc2,2014-11-03T23:42:45+00:00,2015-04-22T15:17:07+00:00,2
#

OPENN_DATA_PATH = "http://openn.library.upenn.edu/Data"

##
# Get the number of master images associated with the object by counting them
# in the manifest-sha1.txt file.
#
# @param [String] object_path path to the object, relative to the OPenn '/Data'
#                 directory; e.g., '0001/ljs103'
# @return [Integer]
def get_page_count object_path
  manifest_uri = sprintf "%s/%s/manifest-sha1.txt", OPENN_DATA_PATH, object_path
  manifest = open(manifest_uri).readlines
  # count the TIFFs or JPEGs in the `data/master` subdirectory
  manifest.grep(%r{\s+data/master/.+\.(tif|jpg)$}).size
end

repo_number = ARGV.shift

abort "Please provide a collection number; got: #{repo_number}" unless repo_number =~ /\A\d+\Z/

csv_uri = sprintf "%s/%04d_contents.csv", OPENN_DATA_PATH, repo_number

##
# Input looks like:
#
# document_id,path,title,metadata_type,created,updated
# 1,0001/ljs103,Reproduction of Sienese book covers.,TEI,2014-11-03T23:13:18+00:00,2015-04-22T15:17:04+00:00
# 2,0001/ljs201,Evangelista Torricelli letter to Marin Marsenne,TEI,2014-11-03T23:38:42+00:00,2015-04-22T15:17:05+00:00

out_csv = sprintf("%04d_contents_brief.csv", repo_number)

print "Writing: #{out_csv}..."

header = %w{id path base_dir created updated icount}

CSV.open out_csv, 'wb+', headers: true do |csv|
  csv << header
  CSV.parse open(csv_uri).read, headers: true do |row|
    path = row['path']

    (out_row ||=[]) << repo_number
    out_row << path
    out_row << File.basename(row['path'])
    out_row << row['created'] << row['updated']
    out_row << get_page_count(path)

    csv << out_row
  end
end

puts "done."
